@import 'variables';

:host {
  display: block;
  width: 100%;



}

$photo-desktop: pxToGrid(220px);
$photo-mobile: pxToGrid(80px);
$profile-max-width: 1200px;

.header {
  @include tabbedDialogHeader($PR-blue-light);
  button {
    margin-left: -$grid-unit / 2;
    margin-right: $grid-unit / 2;
  }
}

.content {
  :host.is-dialog & {
    @include tabbedDialogContent(700px);
  }
}

.panel {
  @include tabbedDialogPanel
}

.profile-banner {
  @include profileBanner;
}

.profile-photo {
  @include profilePhoto($photo-desktop, $photo-mobile);
  transform: translateY(0);
  margin-bottom: 0;

  @include beforeDesktop {
    margin-bottom: 0;
  }
}

.profile-name-and-photo {
  position: relative;
  transform: translateY(-$photo-desktop / 2);
  align-items: flex-start;
  display: flex;
  margin-bottom: -$photo-desktop / 2 + $grid-unit;

  @include beforeDesktop {
    transform: translateY(-$photo-mobile / 2);
    margin-bottom: -$photo-mobile / 2 + $grid-unit;
    display: block;
  }
}

.profile-name {
  font-size: $font-size-lg;
  font-weight: $font-weight-bold;
  margin-left: $grid-unit * 2;
  margin-top: $photo-desktop / 2;
  height: $photo-desktop / 2;
  display: flex;
  align-items: center;
  flex: 1 1 auto;

  .profile-type {
    color: $text-muted;
    font-size: $font-size-base;
    font-weight: $font-weight-base;
  }

  @include beforeDesktop {
    margin-top: $grid-unit / 2;
    height: auto;
    display: block;
    margin-left: $grid-unit / 2;
    margin-right: $grid-unit / 2;
  }
}

.profile-section {
  @include profileSection;
}

.banner-section {
  margin: -$grid-unit;

  @include beforeDesktop {
    margin: -$grid-unit / 2;
  }
}

.profile-section-header {
  @include profileSectionHeader;
}

.profile-group {
  display: flex;
  margin-bottom: 2 * $grid-unit;
  flex-wrap: wrap;

  &.in-thirds > * {
    flex: 0 1 (100% * 1/3);
    
    &.profile-field:not(:nth-child(3n + 2)) {
      padding-right: $grid-unit;
    }
  }
}

.profile-prompt {
  @include profilePrompt;
}

.profile-field {
  @include profileField;
  margin-bottom: $grid-unit;

  &:not(:last-child) {
    margin-bottom: $grid-unit / 2;
  }
}