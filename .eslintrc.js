module.exports = {
  root: true,
  ignorePatterns: ['projects/**/*'],
  overrides: [
    {
      files: ['src/**/*.spec.ts'],
      parserOptions: {
        project: './src/tsconfig.spec.json',
      },
      extends: ['plugin:jasmine/recommended'],
      plugins: ['jasmine'],
      env: { jasmine: true },
      rules: {
        // We intend to enable these eventually:
        'jasmine/new-line-before-expect': 'off',
        'jasmine/new-line-between-declarations': 'off',
        'jasmine/no-disabled-tests': 'off',
        'jasmine/no-promise-without-done-fail': 'off',
        'jasmine/no-spec-dupes': 'off',
        'jasmine/no-unsafe-spy': 'off',
        'jasmine/prefer-promise-strategies': 'off',
        'jasmine/prefer-toHaveBeenCalledWith': 'off',
      },
    },
    {
      files: ['*.ts'],
      parserOptions: {
        project: ['tsconfig.json'],
        createDefaultProgram: true,
      },
      extends: [
        'plugin:@angular-eslint/recommended',
        'plugin:@angular-eslint/template/process-inline-templates',
        'airbnb-base',
        'airbnb-typescript/base',
        'prettier',
        'plugin:prettier/recommended',
      ],
      rules: {
        '@typescript-eslint/consistent-type-definitions': 'error',
        '@typescript-eslint/dot-notation': 'off',
        '@typescript-eslint/explicit-member-accessibility': [
          'off',
          {
            accessibility: 'explicit',
          },
        ],
        'brace-style': ['error', '1tbs'],
        'id-blacklist': 'off',
        'id-match': 'off',
        'import/prefer-default-export': 'off',
        'import/no-import-module-exports': 'off',
        'no-underscore-dangle': 'off',
        'max-classes-per-file': 'off',
        'no-console': ['error', { allow: ['error'] }],
        'import/no-default-export': 'error',
        'import/no-extraneous-dependencies': [
          'error',
          { devDependencies: true },
        ],
        'import/order': [
          'error',
          {
            groups: [
              'builtin',
              'external',
              ['internal', 'parent'],
              'sibling',
              'index',
            ],
          },
        ],
        '@angular-eslint/component-selector': [
          'error',
          {
            prefix: 'pr',
            style: 'kebab-case',
            type: 'element',
          },
        ],
        '@angular-eslint/directive-selector': [
          'error',
          {
            prefix: 'pr',
            style: 'camelCase',
            type: 'attribute',
          },
        ],
        // Below are rules we want to eventually enable:
        'import/no-cycle': 'off',
        '@angular-eslint/no-empty-lifecycle-method': 'off',
        '@angular-eslint/no-output-native': 'off',
        '@angular-eslint/no-output-on-prefix': 'off',
        '@angular-eslint/use-lifecycle-interface': 'off',
        '@typescript-eslint/ban-types': 'off',
        '@typescript-eslint/default-param-last': 'off',
        '@typescript-eslint/lines-between-class-members': 'off',
        '@typescript-eslint/member-ordering': 'off',
        '@typescript-eslint/naming-convention': 'off',
        '@typescript-eslint/no-empty-function': 'off',
        '@typescript-eslint/no-empty-interface': 'off',
        '@typescript-eslint/no-inferrable-types': 'off',
        '@typescript-eslint/no-shadow': 'off',
        '@typescript-eslint/no-throw-literal': 'off',
        '@typescript-eslint/no-unused-expressions': 'off',
        '@typescript-eslint/no-unused-vars': 'off',
        '@typescript-eslint/no-use-before-define': 'off',
        '@typescript-eslint/no-useless-constructor': 'off',
        '@typescript-eslint/prefer-for-of': 'off',
        '@typescript-eslint/return-await': 'off',
        'array-callback-return': 'off',
        'brace-style': 'off',
        'class-methods-use-this': 'off',
        'consistent-return': 'off',
        'default-case': 'off',
        eqeqeq: 'off',
        'func-names': 'off',
        'global-require': 'off',
        'guard-for-in': 'off',
        'jsdoc/newline-after-description': 'off',
        'new-cap': 'off',
        'no-await-in-loop': 'off',
        'no-case-declarations': 'off',
        'no-constant-condition': 'off',
        'no-constructor-return': 'off',
        'no-continue': 'off',
        'no-control-regex': 'off',
        'no-else-return': 'off',
        'no-empty': 'off',
        'no-lonely-if': 'off',
        'no-multi-assign': 'off',
        'no-param-reassign': 'off',
        'no-plusplus': 'off',
        'no-promise-executor-return': 'off',
        'no-prototype-builtins': 'off',
        'no-restricted-globals': 'off',
        'no-restricted-properties': 'off',
        'no-restricted-syntax': 'off',
        'no-return-assign': 'off',
        'no-unneeded-ternary': 'off',
        'no-useless-catch': 'off',
        'no-useless-concat': 'off',
        'no-useless-escape': 'off',
        'no-useless-return': 'off',
        'no-var': 'off',
        'object-shorthand': 'off',
        'one-var': 'off',
        'operator-assignment': 'off',
        'prefer-arrow/prefer-arrow-functions': 'off',
        'prefer-const': 'off',
        'prefer-destructuring': 'off',
        'prefer-exponentiation-operator': 'off',
        'prefer-object-spread': 'off',
        'prefer-promise-reject-errors': 'off',
        'prefer-regex-literals': 'off',
        'prefer-template': 'off',
        radix: 'off',
        'spaced-comment': 'off',
        'vars-on-top': 'off',
        yoda: 'off',
        'prettier/prettier': 'off',
      },
    },
    {
      files: ['*.html'],
      extends: ['plugin:@angular-eslint/template/recommended'],
      rules: {
        // We want to disable these rules eventually:
        '@angular-eslint/template/no-negated-async': 'off',
      },
    },
    {
      files: ['*.stories.ts', 'src/stories/*.ts'],
      rules: {
        'import/no-default-export': 'off',
        'import/no-extraneous-dependencies': 'off',
        '@angular-eslint/component-selector': 'off',
      },
    },
  ],
  extends: ['plugin:storybook/recommended'],
};
